#!/usr/bin/python3

import sys
import math

def help_me() :

    print("USAGE\n"
       "       ./105torus opt a0 a1 a2 a3 a4 n\n\n"
       "DESCRIPTION\n"
       "    opt             method option:\n"
       "                        1 for the bisection method\n"
       "                        2 for Newtonâ€™s method\n"
       "                        3 for the secant method\n"
       "    a[0-4]          coefficients of the equation\n"
       "    n               precision (the application of the polynomial to the solution should be smaller than 10^-n)\n");

def try_except() :

    try :
        opt = int(sys.argv[1])
        a0 = int(sys.argv[2])
        a1 = int(sys.argv[3])
        a2 = int(sys.argv[4])
        a3 = int(sys.argv[5])
        a4 = int(sys.argv[6])
        n = int(sys.argv[7])

    except :
        sys.exit(84)
    choice_opt(opt, a0, a1, a2, a3, a4, n)

def choice_opt(opt, a0, a1, a2, a3, a4, n) :

    if (opt == 1) :
        bisection(a0, a1, a2, a3, a4, n)
    if (opt == 2) :
        Newton(a0, a1, a2, a3, a4, n)
    if (opt == 3) :
        secant(a0, a1, a2, a3, a4, n)

def eq4th(c, a0, a1, a2, a3, a4):
	c = c
	return (a0 + a1 * c + a2 * math.pow(c, 2) + a3 * math.pow(c, 3) + a4 * math.pow(c, 4))

def bisection(a0, a1, a2, a3, a4, n) :
    
    a = 0; b = 1
    while (b - a > math.pow(10, -n)) :
        c = (a + b) / 2
        if (eq4th(a, a0, a1, a2, a3, a4) < 0 and eq4th(c, a0, a1, a2, a3, a4) > 0) or (eq4th(a, a0, a1, a2, a3, a4) > 0 and eq4th(c, a0, a1, a2, a3, a4) < 0):
            b = c
        else:
            a = c
        if (pow(10, n) * c % 1 == 0) :
            print ("x =", c)
        else:
            print ("x = %.*f" % (n, c))

def Newton(a0, a1, a2, a3, a4, n) :

    sys.exit(84)

def secant(a0, a1, a2, a3, a4, n) :
    
    sys.exit(84)

def main() :

    if len(sys.argv) < 2  :
        sys.exit(84)
    elif sys.argv[1] == "-h" :
        help_me()
    elif len(sys.argv) != 8 :
        sys.exit(84)
    elif int(sys.argv[1]) < 1 or int(sys.argv[1]) > 3 or sys.argv[7] < '0' :
        sys.exit(84)
    elif int(sys.argv[3] == 0) and int(sys.argv[4] == 0) and int(sys.argv[5] == 0) and int(sys.argv[6] == 0) :
        sys.exit(84)
    elif len(sys.argv) == 8 :
        try_except()
main()